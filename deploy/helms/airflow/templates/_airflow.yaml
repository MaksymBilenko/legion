apiVersion: v1kind: Servicemetadata:  name: "{{ .Release.Name }}-postgres"  labels:    heritage: {{ .Release.Service | quote }}    release: {{ .Release.Name | quote }}    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    component: "{{ .Release.Name }}-postgres"spec:  selector:    app: "{{ .Release.Name }}-airflow"    tier: db  ports:    - name: postgres      protocol: TCP      port: 5432      targetPort: postgres---apiVersion: v1kind: Servicemetadata:  name: "{{ .Release.Name }}-rabbitmq"  labels:    heritage: {{ .Release.Service | quote }}    release: {{ .Release.Name | quote }}    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    component: "{{ .Release.Name }}-rabbitmq"spec:  selector:    app: "{{ .Release.Name }}-airflow"    tier: rabbitmq  ports:    - name: node      protocol: TCP      port: 5672      targetPort: node    - name: management      protocol: TCP      port: 15672      targetPort: management---apiVersion: v1kind: Servicemetadata:  name: "{{ .Release.Name }}-web"  labels:    heritage: {{ .Release.Service | quote }}    release: {{ .Release.Name | quote }}    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    component: "{{ .Release.Name }}-web"spec:  type: NodePort  selector:    app: "{{ .Release.Name }}-airflow"    tier: web  ports:    - name: web      protocol: TCP      port: 8080      targetPort: web      nodePort: 32080---apiVersion: v1kind: Servicemetadata:  name: "{{ .Release.Name }}-flower"  labels:    heritage: {{ .Release.Service | quote }}    release: {{ .Release.Name | quote }}    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    component: "{{ .Release.Name }}-flower"spec:  type: NodePort  selector:    app: "{{ .Release.Name }}-airflow"    tier: flower  ports:    - name: flower      protocol: TCP      port: 5555      targetPort: flower      nodePort: 32081---apiVersion: extensions/v1beta1kind: Deploymentmetadata:  name: "{{ .Release.Name }}-postgres"  labels:    heritage: {{ .Release.Service | quote }}    release: {{ .Release.Name | quote }}    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    component: "{{ .Release.Name }}-postgres"spec:  replicas: 1  template:    metadata:      labels:        app: "{{ .Release.Name }}-airflow"        tier: db    spec:      containers:      - name: postgres        image: postgres        ports:        - name: postgres          containerPort: 5432        env:         - name: POSTGRES_USER           value: "{{ .Values.secrets.postgres.user }}"         - name: POSTGRES_PASSWORD           value: "{{ .Values.secrets.postgres.password }}"         - name: POSTGRES_DB           value: "{{ .Values.secrets.postgres.db }}"---apiVersion: extensions/v1beta1kind: Deploymentmetadata:  name: "{{ .Release.Name }}-rabbitmq"  labels:    heritage: {{ .Release.Service | quote }}    release: {{ .Release.Name | quote }}    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    component: "{{ .Release.Name }}-rabbitmq"spec:  replicas: 1  template:    metadata:      labels:        app: "{{ .Release.Name }}-airflow"        tier: rabbitmq    spec:      restartPolicy: Always      containers:      - name: rabbitmq        image: rabbitmq:3-management        ports:        - name: management          containerPort: 15672        - name: node          containerPort: 5672        env:        - name: RABBITMQ_DEFAULT_USER          value: "{{ .Values.secrets.rabbitmq.user }}"        - name: RABBITMQ_DEFAULT_PASS          value: "{{ .Values.secrets.rabbitmq.password }}"        - name: RABBITMQ_DEFAULT_VHOST          value: "{{ .Values.secrets.rabbitmq.airflow }}"---apiVersion: extensions/v1beta1kind: Deploymentmetadata:  name: "{{ .Release.Name }}-web"  labels:    heritage: {{ .Release.Service | quote }}    release: {{ .Release.Name | quote }}    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    component: "{{ .Release.Name }}-web"spec:  replicas: 1  template:    metadata:      labels:        app: "{{ .Release.Name }}-airflow"        tier: web    spec:      restartPolicy: Always      containers:      - name: web        image: "{{ .Values.image }}"        env:        - name: AIRFLOW_HOME          value: "/usr/local/airflow"        ports:        - name: web          containerPort: 8080        args: ["webserver"]---apiVersion: extensions/v1beta1kind: Deploymentmetadata:  name: "{{ .Release.Name }}-flower"  labels:    heritage: {{ .Release.Service | quote }}    release: {{ .Release.Name | quote }}    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    component: "{{ .Release.Name }}-flower"spec:  replicas: 1  template:    metadata:      labels:        app: "{{ .Release.Name }}-airflow"        tier: flower    spec:      restartPolicy: Always      containers:      - name: flower        image: "{{ .Values.image }}"        env:        - name: AIRFLOW_HOME          value: "/usr/local/airflow"        # To prevent the error: ValueError: invalid literal for int() with base 10: 'tcp://10.0.0.83:5555'        - name: FLOWER_PORT          value: "5555"        ports:        - name: flower          containerPort: 5555        args: ["flower"]---apiVersion: extensions/v1beta1kind: Deploymentmetadata:  name: "{{ .Release.Name }}-scheduler"  labels:    heritage: {{ .Release.Service | quote }}    release: {{ .Release.Name | quote }}    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    component: "{{ .Release.Name }}-scheduler"spec:  replicas: 1  template:    metadata:      labels:        app: "{{ .Release.Name }}-airflow"        tier: scheduler    spec:      restartPolicy: Always      containers:      - name: scheduler        image: "{{ .Values.image }}"        # volumes:        #     - /localpath/to/dags:/usr/local/airflow/dags        env:        - name: AIRFLOW_HOME          value: "/usr/local/airflow"        args: ["scheduler", "-n", "5"]---apiVersion: extensions/v1beta1kind: Deploymentmetadata:  name: "{{ .Release.Name }}-worker"  labels:    heritage: {{ .Release.Service | quote }}    release: {{ .Release.Name | quote }}    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    component: "{{ .Release.Name }}-worker"spec:  replicas: 1  template:    metadata:      labels:        app: "{{ .Release.Name }}-airflow"        tier: worker    spec:      restartPolicy: Always      containers:      - name: worker        image: "{{ .Values.image }}"        # volumes:        #     - /localpath/to/dags:/usr/local/airflow/dags        env:        - name: AIRFLOW_HOME          value: "/usr/local/airflow"        args: ["worker"]---{{- if .Values.ingress.enabled -}}apiVersion: extensions/v1beta1kind: Ingressmetadata:  annotations:  {{- range $key, $value := .Values.ingress.annotations }}    {{ $key }}: {{ $value | quote }}  {{- end }}  labels:    heritage: {{ .Release.Service | quote }}    release: {{ .Release.Name | quote }}    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    component: "{{ .Release.Name }}-airflow"  name: "{{ .Release.Name }}-airflow"spec:  rules:    - host: "{{ .Values.ingress.domain.partial }}.{{ .Values.rootDomain }}"      http:        paths:          - backend:              serviceName: "{{ .Release.Name }}-web"              servicePort: 8080    {{- if .Values.addLocalDomain }}    - host: "{{ .Values.ingress.domain.partial }}.local.{{ .Values.rootDomain }}"      http:        paths:          - backend:              serviceName: "{{ .Release.Name }}-web"              servicePort: 8080    {{- end }}  {{- if .Values.ingress.tls.enabled }}  tls:  - hosts:    - "{{ .Values.ingress.domain.partial }}.{{ .Values.rootDomain }}"    {{- if .Values.ingress.tls.autoSecretNameDeduction }}    secretName: "{{ .Values.domain.partial }}.{{ .Values.rootDomain }}-tls"    {{- else }}    secretName: {{ .Values.tls.secretName  }}    {{- end }}  {{- end }}{{- end }}